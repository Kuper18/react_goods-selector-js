{"version":3,"sources":["App.jsx","index.jsx"],"names":["goods","App","setHeading","selectedGood","includes","useState","setselectedGood","key","className","type","onClick","map","good","isSelected","cn","ReactDOM","render","document","getElementById"],"mappings":"4OAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,SAASC,EAAWC,GAClB,OAAOH,EAAMI,SAASD,GAAf,UACAA,EADA,gBAEH,oBAGN,MAAwCE,mBAAS,OAAjD,mBAAOF,EAAP,KAAqBG,EAArB,KACIC,EAAM,EAEV,OACE,uBAAMC,UAAU,oBAAhB,UACE,qBAAIA,UAAU,sCAAd,UAEIN,EAAWC,GAKZH,EAAMI,SAASD,IACd,wBACE,UAAQ,cACRM,KAAK,SACLD,UAAU,cACVE,QAAS,WACPJ,EAAgB,UAMxB,uBAAOE,UAAU,QAAjB,SACE,gCACGR,EAAMW,KAAI,SAACC,GACV,IAAMC,EAAaV,IAAiBS,EAIpC,OAFAL,GAAO,EAGL,qBAEE,UAAQ,OACRC,UAAWM,IAAG,CACZ,+BAAgCD,IAJpC,UAOE,6BACE,wBACEL,UAAWM,IAAG,SAAU,CACtB,UAAWD,IAEb,UAASA,EACP,eAEA,YAEFJ,KAAK,SACLC,QAAS,WACP,OACSJ,EADLO,EACqB,GAGFD,IAf3B,SAkBGC,EACC,IAEA,QAMN,oBAAI,UAAQ,YAAYL,UAAU,eAAlC,SACGI,MAnCEL,cCvDrBQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.20b50aca.chunk.js","sourcesContent":["import cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  function setHeading(selectedGood) {\n    return goods.includes(selectedGood)\n      ? `${selectedGood} is selected`\n      : 'No goods selected';\n  }\n\n  const [selectedGood, setselectedGood] = useState('Jam');\n  let key = 0;\n\n  return (\n    <main className=\"section container\">\n      <h1 className=\"title is-flex is-align-items-center\">\n        {selectedGood ? (\n          setHeading(selectedGood)\n        ) : (\n          setHeading(selectedGood)\n        )}\n\n        {goods.includes(selectedGood) && (\n          <button\n            data-cy=\"ClearButton\"\n            type=\"button\"\n            className=\"delete ml-3\"\n            onClick={() => {\n              setselectedGood('');\n            }}\n          />\n        )}\n      </h1>\n\n      <table className=\"table\">\n        <tbody>\n          {goods.map((good) => {\n            const isSelected = selectedGood === good;\n\n            key += 1;\n\n            return (\n              <tr\n                key={key}\n                data-cy=\"Good\"\n                className={cn({\n                  'has-background-success-light': isSelected,\n                })}\n              >\n                <td>\n                  <button\n                    className={cn('button', {\n                      'is-info': isSelected,\n                    })}\n                    data-cy={isSelected ? (\n                      'RemoveButton'\n                    ) : (\n                      'AddButton'\n                    )}\n                    type=\"button\"\n                    onClick={() => {\n                      if (isSelected) {\n                        return setselectedGood('');\n                      }\n\n                      return setselectedGood(good);\n                    }}\n                  >\n                    {isSelected ? (\n                      '-'\n                    ) : (\n                      '+'\n                    )}\n\n                  </button>\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}